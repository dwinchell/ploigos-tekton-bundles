apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  labels:
    ploigos.dev/workflow: standard
  name: everything-java-bundle
spec:
  finally:
  - name: report
    params:
    - name: verbose
      value: $(params.verbose)
    - name: imagePullPolicy
      value: $(params.workflowWorkersImagePullPolicy)
    taskRef:
      name: ploigos-step-runner
      bundle: quay.io/dwinchell_redhat/ploigos-step-runner-task-bundle
    workspaces:
    - name: home
      workspace: home
    - name: app
      workspace: app
  params:
  - default: "false"
    description: Log any sh commands used during execution.
    name: verbose
    type: string
  - description: |
      URL to the application repository to run the pipeline for.
    name: appRepoUrl
    type: string
  - description: |
      Git reference (tag, branch) of the application repository to run the pipeline for.
    name: appRepoRef
    type: string
  - default: "true"
    description: |
      Passed to git-clone ClusterTask.
      Defines if http.sslVerify should be set to true or false in the global git config.
    name: appCloneSSLVerify
    type: string
  - default: ""
    description: |
      Path to the Step Runner configuration to pass to the
      Workflow Step Runner when running workflow steps.
    name: stepRunnerConfigDir
    type: string
  - description: |
      Name of the Kubernetes Secret containing the PGP private keys to import for use by SOPS
      to decrypt encrypted Step Runner config.
    name: pgpKeysSecretName
    type: string
  - default: DEV
    description: |
      Name of the "Development" environment used in the Step Runner configuration
      files and to pass to the Workflow Step Runner when running a step targeted to
      the "Development" environment.
    name: envNameDev
    type: string
  - default: TEST
    description: |
      Name of the "Test" environment used in the Step Runner configuration
      files and to pass to the Workflow Step Runner when running a step targeted to
      the "Test" environment.
    name: envNameTest
    type: string
  - default: PROD
    description: |
      Name of the "Production" environment used in the Step Runner configuration
      files and to pass to the Workflow Step Runner when running a step targeted to
      the "Production" environment.
    name: envNameProd
    type: string
  - default: ^$
    description: |
      Regex pattern for git references that should only go through the
      Continuous Integration (CI) workflow.
    name: ciOnlyGitRefPatterns
    type: string
  - default: ^feature/.+$|^PR-.+$
    description: |
      Regex pattern for git references that should go through the
      Continuous Integration (CI) workflow and then the deployment to
      "Development" environment(s) (IE: "DEV" environment) workflow.
    name: devGitRefPatterns
    type: string
  - default: ^main$
    description: |
      Regex pattern for git references that should go through the
      Continuous Integration (CI) workflow and then the deployment to
      "Release" environment(s) (IE: "TEST" and then "PROD" environments) workflow.
    name: releaseGitRefPatterns
    type: string
  - default: "false"
    description: |
      If 'true', then pull the Workflow Step Runner library source code and build it.
      If 'false', use the version of the Workflow Step Runner library that is pre-installed
      in the CI worker images.

      If 'false' then the following parameters are ignored:
        - 'stepRunnerLibSourceUrl'
        - 'stepRunnerLibIndexUrl'
        - 'stepRunnerLibExtraIndexUrl'
        - 'stepRunnerLibVersion'
    name: stepRunnerUpdateLibrary
    type: string
  - default: https://pypi.org/simple/
    description: |
      If 'stepRunnerUpdateLibrary' is true and 'stepRunnerLibSourceUrl' is not supplied then this
      will be passed to pip as '--index-url' for installing the Workflow Step Runner library
      and its dependencies.

      NOTE
      ----
      PIP is indeterminate whether it will pull packages from '--index-url' or
      '--extra-index-url', therefore be sure to specify 'stepRunnerLibVersion'
      if trying to pull a specific version from a specific index.

      SEE
      ---
      - https://pip.pypa.io/en/stable/reference/pip_install/#id48
    name: stepRunnerLibIndexUrl
    type: string
  - default: https://pypi.org/simple/
    description: |
      If 'stepRunnerUpdateLibrary' is true and 'stepRunnerLibSourceUrl' is not supplied then this
      will be passed to pip as '--extra-index-url' for installing the Workflow Step Runner library
      and its dependencies.

      NOTE
      ----
      PIP is indeterminate whether it will pull packages from '--index-url' or
      '--extra-index-url', therefore be sure to specify 'stepRunnerLibVersion'
      if trying to pull a specific version from a specific index.

      SEE
      ---
      - https://pip.pypa.io/en/stable/reference/pip_install/#id48
    name: stepRunnerLibExtraIndexUrl
    type: string
  - default: ""
    description: |
      If 'stepRunnerUpdateLibrary' is true and 'stepRunnerLibSourceUrl' is not supplied then this
      will be passed to pip as as the version of the Workflow Step Runner library to install.

      NOTE
      ----
      If not given pip will install the latest from either 'stepRunnerLibIndexUrl' or
      'stepRunnerLibExtraIndexUrl' indeterminately.
    name: stepRunnerLibVersion
    type: string
  - default: ""
    description: |
      If none empty value given and 'stepRunnerUpdateLibrary' is true this will be used as the source
      location to install the Workflow Step Runner library from rather than from a PEP 503 compliant
      repository.

      If given then the following parameters are ignored:
        - 'stepRunnerLibIndexUrl'
        - 'stepRunnerLibExtraIndexUrl'
        - 'stepRunnerLibVersion'

      EXAMPLES
      --------
      git+https://github.com/ploigos/ploigos-step-runner.git@feature/NAPSSPO-1018
      installs from the public 'ploigos' fork from the 'feature/NAPSSPO-1018' branch.

      git+https://gitea.internal.example.xyz/tools/ploigos-step-runner.git@main
      installs from an internal fork of the step runner library from the 'main' branch.
    name: stepRunnerLibSourceUrl
    type: string
  - default: IfNotPresent
    description: |
      Policy for pulling new versions of the imageTag for the CI worker images
      when running this pipeline.
    name: workflowWorkersImagePullPolicy
    type: string
  - default: quay.io/ploigos/ploigos-base:latest
    description: |
      Container image to use when creating a workflow worker
      to run pipeline steps when no other specific container image has been
      specified for that step.
    name: workflowWorkerImageDefault
    type: string
  - default: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.12.1
    description: |
      Container image to use when creating a workflow worker
      to run pipeline steps when performing source clone step(s).
    name: workflowWorkerImageSourceClone
    type: string
  - description: |
      Container image to use when creating a workflow worker
      to run pipeline steps when performing unit test step(s).
    name: workflowWorkerImageUnitTest
    type: string
  - description: |
      Container image to use when creating a workflow worker
      to run pipeline steps when performing package application step(s).
    name: workflowWorkerImagePackage
    type: string
  - default: ploigos/ploigos-tool-sonar:latest
    description: |
      Container image to use when creating a workflow worker
      to run pipeline steps when performing static code analysis step(s).
    name: workflowWorkerImageStaticCodeAnalysis
    type: string
  - description: |
      Container image to use when creating a workflow worker
      to run pipeline steps when performing push push packaged artifacts step(s).
    name: workflowWorkerImagePushArtifacts
    type: string
  - default: ploigos/ploigos-tool-containers:latest
    description: |
      Container image to use when creating a workflow worker
      to run pipeline steps when performing container operations (build/push/etc) step(s).
    name: workflowWorkerImageContainerOperations
    type: string
  - default: ploigos/ploigos-tool-openscap:latest
    description: |
      Container image to use when creating a workflow worker
      to run pipeline steps when performing container image static compliance scan step(s).
    name: workflowWorkerImageContainerImageStaticComplianceScan
    type: string
  - default: ploigos/ploigos-tool-openscap:latest
    description: |
      Container image to use when creating a workflow worker to run pipeline steps
      when performing container image static vulnerability scan step(s).
    name: workflowWorkerImageContainerImageStaticVulnerabilityScan
    type: string
  - default: ploigos/ploigos-tool-argocd:latest
    description: |
      Container image to use when creating a workflow worker
      to run pipeline steps when performing deploy step(s).
    name: workflowWorkerImageDeploy
    type: string
  - default: ploigos/ploigos-tool-config-lint:latest
    description: |
      Container image to use when creating a workflow worker
      to run pipeline steps when performing validate environment configuration step(s).
    name: workflowWorkerImageValidateEnvironmentConfiguration
    type: string
  - description: |
      Container image to use when creating a workflow worker
      to run pipeline steps when performing user acceptance tests (UAT) step(s).
    name: workflowWorkerImageUAT
    type: string
  - description: |
      Container image to use when creating a workflow worker
      to run pipeline steps when performing auto governance steps.
    name: workflowWorkerImageAutoGov
    type: string
  tasks:
  - name: setup-stage-gate
    params:
    - name: verbose
      value: $(params.verbose)
    - name: input
      value: $(params.appRepoRef)
    - name: pattern
      value: $(params.ciOnlyGitRefPatterns)|$(params.devGitRefPatterns)|$(params.releaseGitRefPatterns)
    taskRef:
      name: ploigos-pattern-matcher
      bundle: quay.io/dwinchell_redhat/ploigos-pattern-matcher-task-bundle
  - name: setup-app-clone
    params:
    - name: verbose
      value: $(params.verbose)
    - name: image
      value: $(params.workflowWorkerImageSourceClone)
    - name: imagePullPolicy
      value: $(params.workflowWorkersImagePullPolicy)
    - name: url
      value: $(params.appRepoUrl)
    - name: revision
      value: $(params.appRepoRef)
    - name: deleteExisting
      value: "true"
    - name: sslVerify
      value: $(params.appCloneSSLVerify)
    - name: refspec
      value: +refs/heads/$(params.appRepoRef):$(params.appRepoRef)
    runAfter:
    - setup-stage-gate
    taskRef:
      name: ploigos-git-clone
      bundle: quay.io/dwinchell_redhat/ploigos-git-clone-task-bundle
    when:
    - input: $(tasks.setup-stage-gate.results.matches)
      operator: in
      values:
      - "true"
    workspaces:
    - name: output
      workspace: app
  - name: ci-stage-gate
    params:
    - name: verbose
      value: $(params.verbose)
    - name: input
      value: $(params.appRepoRef)
    - name: pattern
      value: $(params.ciOnlyGitRefPatterns)|$(params.devGitRefPatterns)|$(params.releaseGitRefPatterns)
    runAfter:
    - setup-app-clone
    taskRef:
      name: ploigos-pattern-matcher
      bundle: quay.io/dwinchell_redhat/ploigos-pattern-matcher-task-bundle
  - name: ci-run-unit-tests
    params:
    - name: GOALS
      value:
      - --no-transfer-progress
      - test
    runAfter:
    - ci-stage-gate
    taskRef:
      name: maven
    when:
    - input: $(tasks.ci-stage-gate.results.matches)
      operator: in
      values:
      - "true"
    workspaces:
    - name: source
      workspace: app
    - name: maven-settings
      workspace: maven-settings
  - name: ci-package-application
    params:
      - name: GOALS
        value:
          - --no-transfer-progress
          - package
    runAfter:
      - ci-run-unit-tests
    taskRef:
      name: maven
    when:
      - input: $(tasks.ci-stage-gate.results.matches)
        operator: in
        values:
          - "true"
    workspaces:
      - name: source
        workspace: app
      - name: maven-settings
        workspace: maven-settings
  - name: ci-static-code-analysis
    params:
    runAfter:
    - ci-package-application
    taskRef:
      name: sonarqube-scanner
    when:
    - input: $(tasks.ci-stage-gate.results.matches)
      operator: in
      values:
      - "true"
    workspaces:
    - name: source-dir
      workspace: app
    - name: sonar-settings
      secret:
        secretName: sonar-settings
  - name: ci-push-application-to-repository
    params:
    - name: verbose
      value: $(params.verbose)
    - name: imagePullPolicy
      value: $(params.workflowWorkersImagePullPolicy)
    runAfter:
    - ci-static-code-analysis
    taskRef:
      name: ploigos-step-runner
      bundle: quay.io/dwinchell_redhat/ploigos-step-runner-task-bundle
    when:
    - input: $(tasks.ci-stage-gate.results.matches)
      operator: in
      values:
      - "true"
    workspaces:
    - name: home
      workspace: home
    - name: source-dir
      workspace: app
    - name: source-dir
      workspace: sonar-settings
  - name: ci-create-container-image
    params:
      - name: verbose
        value: $(params.verbose)
      - name: imagePullPolicy
        value: $(params.workflowWorkersImagePullPolicy)
    runAfter:
    - ci-push-application-to-repository
    taskRef:
      name: ploigos-step-runner
      bundle: quay.io/dwinchell_redhat/ploigos-step-runner-task-bundle
    when:
    - input: $(tasks.ci-stage-gate.results.matches)
      operator: in
      values:
      - "true"
    workspaces:
    - name: home
      workspace: home
    - name: app
      workspace: app
  - name: ci-static-image-scan-compliance
    params:
      - name: verbose
        value: $(params.verbose)
      - name: imagePullPolicy
        value: $(params.workflowWorkersImagePullPolicy)
    runAfter:
    - ci-create-container-image
    taskRef:
      name: ploigos-step-runner
      bundle: quay.io/dwinchell_redhat/ploigos-step-runner-task-bundle
    when:
    - input: $(tasks.ci-stage-gate.results.matches)
      operator: in
      values:
      - "true"
    workspaces:
    - name: home
      workspace: home
    - name: app
      workspace: app
  - name: ci-static-image-scan-vulnerability
    params:
      - name: verbose
        value: $(params.verbose)
      - name: imagePullPolicy
        value: $(params.workflowWorkersImagePullPolicy)
    runAfter:
    - ci-create-container-image
    - ci-static-image-scan-compliance
    taskRef:
      name: ploigos-step-runner
      bundle: quay.io/dwinchell_redhat/ploigos-step-runner-task-bundle
    when:
    - input: $(tasks.ci-stage-gate.results.matches)
      operator: in
      values:
      - "true"
    workspaces:
    - name: home
      workspace: home
    - name: app
      workspace: app
  - name: ci-push-container-image-to-repository
    params:
      - name: verbose
        value: $(params.verbose)
      - name: imagePullPolicy
        value: $(params.workflowWorkersImagePullPolicy)
    runAfter:
    - ci-static-image-scan-vulnerability
    - ci-static-image-scan-compliance
    taskRef:
      name: ploigos-step-runner
      bundle: quay.io/dwinchell_redhat/ploigos-step-runner-task-bundle
    when:
    - input: $(tasks.ci-stage-gate.results.matches)
      operator: in
      values:
      - "true"
    workspaces:
    - name: home
      workspace: home
    - name: app
      workspace: app
  - name: ci-sign-container-image
    params:
      - name: verbose
        value: $(params.verbose)
      - name: imagePullPolicy
        value: $(params.workflowWorkersImagePullPolicy)
    runAfter:
    - ci-push-container-image-to-repository
    taskRef:
      name: ploigos-step-runner
      bundle: quay.io/dwinchell_redhat/ploigos-step-runner-task-bundle
    when:
    - input: $(tasks.ci-stage-gate.results.matches)
      operator: in
      values:
      - "true"
    workspaces:
    - name: home
      workspace: home
    - name: app
      workspace: app
  - name: ci-generate-evidence
    params:
      - name: verbose
        value: $(params.verbose)
      - name: imagePullPolicy
        value: $(params.workflowWorkersImagePullPolicy)
    runAfter:
    - ci-sign-container-image
    taskRef:
      name: ploigos-step-runner
      bundle: quay.io/dwinchell_redhat/ploigos-step-runner-task-bundle
    workspaces:
    - name: home
      workspace: home
    - name: app
      workspace: app
  - name: dev-stage-gate
    params:
    - name: verbose
      value: $(params.verbose)
    - name: input
      value: $(params.appRepoRef)
    - name: pattern
      value: $(params.devGitRefPatterns)
    runAfter:
    - ci-generate-evidence
    taskRef:
      name: ploigos-pattern-matcher
      bundle: quay.io/dwinchell_redhat/ploigos-pattern-matcher-task-bundle
  - name: dev-audit-attestation
    params:
    - name: verbose
      value: $(params.verbose)
    - name: environment
      value: $(params.envNameDev)
    runAfter:
    - dev-stage-gate
    taskRef:
      name: ploigos-step-runner
      bundle: quay.io/dwinchell_redhat/ploigos-step-runner-task-bundle
    when:
    - input: $(tasks.dev-stage-gate.results.matches)
      operator: in
      values:
      - "true"
    workspaces:
    - name: home
      workspace: home
    - name: app
      workspace: app
  - name: dev-deploy-or-update-environment
    params:
      - name: verbose
        value: $(params.verbose)
      - name: imagePullPolicy
        value: $(params.workflowWorkersImagePullPolicy)
    runAfter:
    - dev-audit-attestation
    taskRef:
      name: ploigos-step-runner
      bundle: quay.io/dwinchell_redhat/ploigos-step-runner-task-bundle
    when:
    - input: $(tasks.dev-stage-gate.results.matches)
      operator: in
      values:
      - "true"
    workspaces:
    - name: home
      workspace: home
    - name: app
      workspace: app
  - name: dev-validate-environment-configuration
    params:
      - name: verbose
        value: $(params.verbose)
      - name: imagePullPolicy
        value: $(params.workflowWorkersImagePullPolicy)
    runAfter:
    - dev-deploy-or-update-environment
    taskRef:
      name: ploigos-step-runner
      bundle: quay.io/dwinchell_redhat/ploigos-step-runner-task-bundle
    when:
    - input: $(tasks.dev-stage-gate.results.matches)
      operator: in
      values:
      - "true"
    workspaces:
    - name: home
      workspace: home
    - name: app
      workspace: app
  - name: dev-run-user-acceptance-tests
    params:
      - name: verbose
        value: $(params.verbose)
      - name: imagePullPolicy
        value: $(params.workflowWorkersImagePullPolicy)
    runAfter:
    - dev-validate-environment-configuration
    taskRef:
      name: ploigos-step-runner
      bundle: quay.io/dwinchell_redhat/ploigos-step-runner-task-bundle
    when:
    - input: $(tasks.dev-stage-gate.results.matches)
      operator: in
      values:
      - "true"
    workspaces:
    - name: home
      workspace: home
    - name: app
      workspace: app
  - name: dev-generate-evidence
    params:
      - name: verbose
        value: $(params.verbose)
      - name: imagePullPolicy
        value: $(params.workflowWorkersImagePullPolicy)
    runAfter:
    - dev-run-user-acceptance-tests
    taskRef:
      name: ploigos-step-runner
      bundle: quay.io/dwinchell_redhat/ploigos-step-runner-task-bundle
    when:
    - input: $(tasks.dev-stage-gate.results.matches)
      operator: in
      values:
      - "true"
    workspaces:
    - name: home
      workspace: home
    - name: app
      workspace: app
  workspaces:
  - description: |
      Workspace for the container users home directory.
    name: home
  - description: |
      Workspace to checkout the application this workflow is for and set as the working directory
      for the step executions.
    name: app
  - description: |
      Workspace for the Maven settings directory (.m2). Useful for adding files like settings.xml.
      You can use a ConfigMap to inject files. See https://github.com/tektoncd/catalog/tree/main/task/maven/0.2
      for usage.
    name: maven-settings
  - description: |
      Workspace to contain SonarQube settings file (sonar.properties). Use a ConfigMap or Secret to inject sonar.propertes.
      See https://github.com/tektoncd/catalog/tree/main/task/sonarqube-scanner/0.1 for usage.
    name: sonar-settings
